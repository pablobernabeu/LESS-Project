Session2_melted_data <- Session2_melted_data_dirty %>%
filter(!is.nan(Activation)) %>%
filter(complete.cases(.))  # Ensure no NA values are left
# View the cleaned data
View(Session2_melted_data)
# making sure that no Nas or NaNs have been introduced by coercion
rows_with_any_na_nan <- Session2_melted_data %>%
filter(if_any(everything(), ~ is.na(.) | is.nan(.)))
print(rows_with_any_na_nan)
Session2_melted_data$Time <- as.factor(Session2_melted_data$Time)
Session2_melted_data$Region <- as.factor(Session2_melted_data$Region)
Session2_melted_data$Grammaticality <- as.factor(Session2_melted_data$Grammaticality)
Session2_melted_data$Participant <- as.factor(Session2_melted_data$Participant)
# Subset the data frame for the N200 time window (200-500 ms)
S2_N200 <- Session2_melted_data [Session2_melted_data$Time %in% seq(200, 500, 2),]
View(S2_N200)
read.csv("/Background/LHQ3 results raw.csv")
library(readxl)
LHQ3_results_raw <- read_excel("Background/LHQ3 results raw.xlsx")
View(LHQ3_results_raw)
View(LHQ3_results_raw)
sheet1 <- read_excel(LHQ3_results_raw, sheet = "Sheet1", col_names = FALSE)
sheet1 <- read_excel(LHQ3_results_raw, sheet = "Sheet1", col_names = FALSE)
# Preview the first few rows to understand the structure
head(sheet1)
#LHQ3 data importation and transformation
library(readxl)
file_path <- "LHQ3 results raw.xlsx"
sheet1 <- read_excel(LHQ3_results_raw, sheet = "Sheet1", col_names = FALSE)
sheet1 <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
file_path <- "LHQ3 results raw.xlsx"
sheet1 <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
file_path <- "Background/LHQ3 results raw.xlsx"
sheet1 <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Preview the first few rows to understand the structure
head(sheet1)
# Extract the column names (likely from the first row or multiple rows)
# Assume the actual header is in the first row
colnames_raw <- sheet1[1, ] %>% as.character()
# Remove the row(s) that contained the column names
sheet1 <- sheet1[-1, ]
file_path <- "Background/LHQ3 results raw.xlsx"
sheet1 <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Preview the first few rows to understand the structure
head(sheet1)
# Extract the column names (likely from the first row or multiple rows)
# Assume the actual header is in the first row
colnames_raw <- sheet1[1, ] %>% as.character()
install.packages("dplyr")
library(dplyr)
LHQ3_results_raw <- read_excel("Background/LHQ3 results raw.xlsx")
View(LHQ3_results_raw)
file_path <- "Background/LHQ3 results raw.xlsx"
sheet1 <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Preview the first few rows to understand the structure
head(sheet1)
# Extract the column names (likely from the first row or multiple rows)
# Assume the actual header is in the first row
colnames_raw <- sheet1[1, ] %>% as.character()
# Clean up the column names (e.g., remove newline characters, trim whitespace)
colnames_clean <- make.names(colnames_raw, unique = TRUE)
# Assign cleaned column names to the dataframe
colnames(sheet1) <- colnames_clean
# Remove the row(s) that contained the column names
sheet1 <- sheet1[-1, ]
# Now, the data should be cleaned with unique column names
# Proceed with any further data manipulation as needed
View(sheet1)
# Now, the data should be cleaned with unique column names
# Proceed with any further data manipulation as needed
View(sheet1)
# Now, the data should be cleaned with unique column names
# Proceed with any further data manipulation as needed
View(sheet1)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
LHQ3_results_raw <- read_excel("Background/LHQ3 results raw.xlsx")
View(LHQ3_results_raw)
# Read the Excel file without using the first row as the header
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
LHQ3_results_raw <- read_excel("Background/LHQ3 results raw.xlsx")
View(LHQ3_results_raw)
# Read the Excel file without using the first row as the header
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
# Read the Excel file without using the first row as the header
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Display the first few rows of the data to verify
print(head(LHQ3_results_raw))
# Function to fill NA values with the previous non-NA value
fill_na_with_previous <- function(row) {
for (i in 2:length(row)) {
if (is.na(row[i])) {
row[i] <- row[i - 1]
}
}
return(row)
}
# Apply the function to the first two rows
LHQ3_results_raw[1, ] <- fill_na_with_previous(LHQ3_results_raw[1, ])
LHQ3_results_raw[2, ] <- fill_na_with_previous(LHQ3_results_raw[2, ])
# Remove the first two rows, as they are now used to set column names
column_names <- as.character(LHQ3_results_raw[1, ])
column_names[is.na(column_names)] <- as.character(LHQ3_results_raw[2, is.na(column_names)])
LHQ3_results_raw <- LHQ3_results_raw[-c(1, 2), ]
# Assign the cleaned column names
colnames(LHQ3_results_raw) <- column_names
# Display the first few rows of the cleaned data
print(head(LHQ3_results_raw))
# Display the first few rows of the cleaned data
View(LHQ3_results_raw))
# Display the first few rows of the cleaned data
View(LHQ3_results_raw)
LHQ3_results_raw <- read_excel("Background/LHQ3 results raw.xlsx")
View(LHQ3_results_raw)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
# Read the Excel file without using the first row as the header
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
View(LHQ3_results_raw)
# Load necessary libraries
library(readxl)
library(dplyr)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
# Read the Excel file without using the first row as the header
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Display the first few rows of the data to verify
print(head(LHQ3_results_raw))
View(LHQ3_results_raw)
# Function to fill NA values with the previous non-NA value
fill_na_with_previous <- function(row) {
for (i in 2:length(row)) {
if (is.na(row[i])) {
row[i] <- row[i - 1]
}
}
return(row)
}
# Apply the function to the first two rows
LHQ3_results_raw[1, ] <- fill_na_with_previous(LHQ3_results_raw[1, ])
LHQ3_results_raw[2, ] <- fill_na_with_previous(LHQ3_results_raw[2, ])
# Set column names using the first row
column_names <- as.character(LHQ3_results_raw[1, ])
# Remove the first row (used for column names)
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Remove the new first row (previously the second row)
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Assign the cleaned column names
colnames(LHQ3_results_raw) <- column_names
# Display the first few rows of the cleaned data
print(head(LHQ3_results_raw))
# Read the Excel file without using the first row as the header
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
View(LHQ3_results_raw)
# Function to fill NA values with the previous non-NA value
fill_na_with_previous <- function(row) {
for (i in 2:length(row)) {
if (is.na(row[i])) {
row[i] <- row[i - 1]
}
}
return(row)
}
# Apply the function to the first two rows
LHQ3_results_raw[1, ] <- fill_na_with_previous(LHQ3_results_raw[1, ])
LHQ3_results_raw[2, ] <- fill_na_with_previous(LHQ3_results_raw[2, ])
# Set column names using the first row
column_names <- as.character(LHQ3_results_raw[1, ])
# Remove the first row (used for column names)
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Remove the new first row (previously the second row)
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Assign the cleaned column names
colnames(LHQ3_results_raw) <- column_names
# Display the first few rows of the cleaned data
print(head(LHQ3_results_raw))
library(tidyr)
install.packages("tidyt")
install.packages("tidyr")
library(tidyr)
library(dplyr)
library(tidyr)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
# Read the Excel file and treat the first row as the header
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = TRUE)
# Display the first few rows to verify the data structure
print(head(LHQ3_results_raw))
# Display the first few rows to verify the data structure
View(LHQ3_results_raw)
# Remove the second row
LHQ3_results_raw <- LHQ3_results_raw[-2, ]
View(LHQ3_results_raw)
# Read the Excel file and treat the first row as the header
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Display the first few rows to verify the data structure
View(LHQ3_results_raw)
# Remove the second row
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
# Fill NA values with the value to the left
LHQ3_results_raw <- LHQ3_results_raw %>%
mutate(across(everything(), ~ ifelse(is.na(.), lag(.), .)))
View(LHQ3_results_raw)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
LHQ3_results_raw <- read_excel("Background/LHQ3 results raw.xlsx")
View(LHQ3_results_raw)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Display the first few rows to verify the data structure
View(LHQ3_results_raw)
# Remove the first row
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
for (col in names(LHQ3_results_raw)) {
LHQ3_results_raw[[col]][is.na(LHQ3_results_raw[[col]])] <- LHQ3_results_raw[[col]][2]
}
# Remove the second row after unnesting
LHQ3_results_raw <- LHQ3_results_raw[-2, ]
View(LHQ3_results_raw)
# Load the necessary library
library(readxl)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Set the first row as column names
colnames(LHQ3_results_raw) <- LHQ3_results_raw[1, ]
View(LHQ3_results_raw)
# Remove the first row (which is now the header) from the data
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
# Convert the columns to the appropriate data types if needed
LHQ3_results_raw <- type.convert(LHQ3_results_raw, as.is = TRUE)
# Display the first few rows to verify the data structure
View(LHQ3_results_raw)
# Combine the first and second rows, with values separated by commas
combined_row <- apply(LHQ3_results_raw[1:2, ], 2, function(x) paste(x, collapse = ","))
View(LHQ3_results_raw)
# Replace the first two rows with the combined row
LHQ3_results_raw <- LHQ3_results_raw[-(1:2), ]
LHQ3_results_raw <- rbind(combined_row, LHQ3_results_raw)
# Display the first few rows to verify the data structure
View(LHQ3_results_raw)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Set the first row as column names
colnames(LHQ3_results_raw) <- LHQ3_results_raw[1, ]
View(LHQ3_results_raw)
# Remove the first row (which is now the header) from the data
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
# Combine the header with the first row
combined_header_row <- paste(colnames(LHQ3_results_raw), LHQ3_results_raw[1, ], sep = ",")
combined_header_row <- as.data.frame(t(combined_header_row), stringsAsFactors = FALSE)
colnames(combined_header_row) <- colnames(LHQ3_results_raw)
# Remove the first row from the original data
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Combine the new header row with the rest of the data
LHQ3_results_raw <- rbind(combined_header_row, LHQ3_results_raw)
# Display the first few rows to verify the data structure
View(LHQ3_results_raw)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row (which is the row you want to combine with the header)
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Set the first row as column names
colnames(LHQ3_results_raw) <- LHQ3_results_raw[1, ]
# Remove the first row (which is now the header) from the data
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Replace NA values in the header and first data row
replace_na_left <- function(x) {
for (i in 2:length(x)) {
if (is.na(x[i])) {
x[i] <- x[i - 1]
}
}
return(x)
}
# Apply the function to the header and first row
header <- replace_na_left(colnames(LHQ3_results_raw))
first_row <- replace_na_left(LHQ3_results_raw[1, ])
# Combine the header with the first row
combined_header_row <- paste(header, first_row, sep = ",")
combined_header_row <- as.data.frame(t(combined_header_row), stringsAsFactors = FALSE)
colnames(combined_header_row) <- colnames(LHQ3_results_raw)
# Remove the first row from the original data
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Combine the new header row with the rest of the data
LHQ3_results_raw <- rbind(combined_header_row, LHQ3_results_raw)
# Display the first few rows to verify the data structure
View(LHQ3_results_raw)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
file_path <- here("Background", "LHQ3 results raw.xlsx")
install.packages("here")
Y
library(here)
file_path <- here("Background", "LHQ3 results raw.xlsx")
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
file_path <- here("Background", "LHQ3 results raw.xlsx")
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row and set it as column names
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
colnames(LHQ3_results_raw) <- LHQ3_results_raw[1, ]
# Remove the first row (which is now the header) from the data
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
library(here)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
file_path <- here("Background", "LHQ3 results raw.xlsx")
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
View(LHQ3_results_raw)
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
# Extract the value from column 6, row 1
value_to_add <- LHQ3_results_raw[1, 6]
# Extract the value from column 6, row 1
value_to_add <- LHQ3_results_raw[1, 6]
# Get the existing value in row 7, column 1
existing_value <- LHQ3_results_raw[7, 1]
# Concatenate the existing value with the new value separated by a comma
LHQ3_results_raw[7, 1] <- paste(existing_value, value_to_add, sep = ", ")
# View the updated data
View(LHQ3_results_raw)
View(LHQ3_results_raw)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
library(here)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
file_path <- here("Background", "LHQ3 results raw.xlsx")
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Extract the value from column 6, row 1
value_to_add <- LHQ3_results_raw[1, 6]
# Get the existing value in row 7, column 1
existing_value <- LHQ3_results_raw[7, 1]
# Concatenate the existing value with the new value separated by a comma
LHQ3_results_raw[7, 1] <- paste(existing_value, value_to_add, sep = ", ")
# View the updated data
View(LHQ3_results_raw)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
library(here)
# Specify the path to your Excel file
file_path <- "Background/LHQ3 results raw.xlsx"
file_path <- here("Background", "LHQ3 results raw.xlsx")
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
View(LHQ3_results_raw)
# Rename the column at index 9 to "language use"
# Assign new column names to the data frame
colnames(LHQ3_results_raw)[9] <- "language use"
View(LHQ3_results_raw)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
library(here)
file_path <- here("Background", "LHQ3 results raw.xlsx")
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
# Update the value in column 9, row 1 to "language use"
LHQ3_results_raw[1, 9] <- "language use"
View(LHQ3_results_raw)
# Replace NA values in row 1, columns 1 to 32 with the replacement value
LHQ3_results_raw[1, 1:32][is.na(LHQ3_results_raw[1, 1:32])] <- replacement_value
# Get the value from column 9, row 1
replacement_value <- LHQ3_results_raw[1, 9]
# Replace NA values in row 1, columns 1 to 32 with the replacement value
LHQ3_results_raw[1, 1:32][is.na(LHQ3_results_raw[1, 1:32])] <- replacement_value
# View the updated data frame
View(LHQ3_results_raw)
# Convert replacement_value to character if needed
replacement_value <- as.character(replacement_value)
# Replace NA values in row 1, columns 1 to 32 with the replacement value
LHQ3_results_raw[1, 1:32][is.na(LHQ3_results_raw[1, 1:32])] <- replacement_value
# View the updated data frame
View(LHQ3_results_raw)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
library(here)
file_path <- here("Background", "LHQ3 results raw.xlsx")
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
# Update the value in column 9, row 1 to "language use"
LHQ3_results_raw[1, 9] <- "language use"
# Get the value from column 9, row 1
replacement_value <- LHQ3_results_raw[1, 9]
# Convert replacement_value to character if needed
replacement_value <- as.character(replacement_value)
# Update the values in row 2, columns 9 to 32
LHQ3_results_raw[2, 9:32] <- lapply(LHQ3_results_raw[2, 9:32], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
# Create the new value by concatenating replacement_value, a comma, and the current value
paste(replacement_value, x, sep = ", ")
})
# View the updated data frame
View(LHQ3_results_raw)
# Remove row 1 (which is now the updated row)
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# View the updated data frame
View(LHQ3_results_raw)
# View the updated data frame
View(LHQ3_results_raw)
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
library(here)
file_path <- here("Background", "LHQ3 results raw.xlsx")
# Read the Excel file and treat the first row as regular text
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
# Update the value in column 9, row 1 to "language use"
LHQ3_results_raw[1, 9] <- "language use"
# Get the value from column 9, row 1
Q_language_use <- LHQ3_results_raw[1, 9]
# Convert Q_language_use to character if needed
Q_language_use <- as.character(Q_language_use)
# Update the values in row 2, columns 9 to 32
LHQ3_results_raw[2, 9:32] <- lapply(LHQ3_results_raw[2, 9:32], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
# Create the new value by concatenating Q_language_use, a comma, and the current value
paste(Q_language_use, x, sep = ", ")
})
