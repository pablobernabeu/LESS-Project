x <- as.character(x)
paste(Q_BA, x, sep = ", ")
})
# Update the value in column 107, row 1 to "MA L"
LHQ3_results_raw[1, 107] <- "MA L"
# Get the value from column 101, row 1
Q_MA <- LHQ3_results_raw[1, 107]
# Changing the values in row 2, columns 107 to 109 to include Q_MA
#converting value into a character
Q_MA <- as.character(Q_MA)
LHQ3_results_raw[2, 107:109] <- lapply(LHQ3_results_raw[2, 107:109], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_MA, x, sep = ", ")
})
# Update the value in column 110, row 1 to "PhD L"
LHQ3_results_raw[1, 110] <- "PhD L"
# Get the value from column 101, row 1
Q_PhD <- LHQ3_results_raw[1, 110]
# Changing the values in row 2, columns 110 to 112 to include Q_PhD
#converting value into a character
Q_PhD <- as.character(Q_PhD)
LHQ3_results_raw[2, 110:112] <- lapply(LHQ3_results_raw[2, 110:112], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_PhD, x, sep = ", ")
})
#repeating for question 15
# Update the value in column 114, row 1 to "Proficiency L1"
LHQ3_results_raw[1, 114] <- "Proficiency L1"
# Get the value from column 114, row 1
Q_Proficiency1 <- LHQ3_results_raw[1, 114]
# Changing the values in row 2, columns 114 to 118 to include Q_Proficiency1
#converting value into a character
Q_Proficiency1 <- as.character(Q_Proficiency1)
LHQ3_results_raw[2, 114:118] <- lapply(LHQ3_results_raw[2, 114:118], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_Proficiency1, x, sep = ", ")
})
# Update the value in column 119, row 1 to "Proficiency L2"
LHQ3_results_raw[1, 119] <- "Proficiency L2"
# Get the value from column 119, row 1
Q_Proficiency2 <- LHQ3_results_raw[1, 119]
# Changing the values in row 2, columns 119 to 123 to include Q_Proficiency2
#converting value into a character
Q_Proficiency2 <- as.character(Q_Proficiency2)
LHQ3_results_raw[2, 119:123] <- lapply(LHQ3_results_raw[2, 119:123], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_Proficiency2, x, sep = ", ")
})
# Update the value in column 124, row 1 to "Proficiency L3"
LHQ3_results_raw[1, 124] <- "Proficiency L3"
# Get the value from column 124, row 1
Q_Proficiency3 <- LHQ3_results_raw[1, 124]
# Changing the values in row 2, columns 124 to 128 to include Q_Proficiency3
#converting value into a character
Q_Proficiency3 <- as.character(Q_Proficiency3)
LHQ3_results_raw[2, 124:128] <- lapply(LHQ3_results_raw[2, 124:128], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_Proficiency3, x, sep = ", ")
})
# Update the value in column 129, row 1 to "Proficiency L4"
LHQ3_results_raw[1, 129] <- "Proficiency L4"
# Get the value from column 129, row 1
Q_Proficiency4 <- LHQ3_results_raw[1, 129]
# Changing the values in row 2, columns 129 to 133 to include Q_Proficiency4
#converting value into a character
Q_Proficiency4 <- as.character(Q_Proficiency4)
LHQ3_results_raw[2, 129:133] <- lapply(LHQ3_results_raw[2, 129:133], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_Proficiency4, x, sep = ", ")
})
#repeating for question 16, seperated by language
# Update the value in column 134, row 1 to " L1 accent score"
LHQ3_results_raw[1, 134] <- "L1 accent score"
# Get the value from column 134, row 1
Q_accent1 <- LHQ3_results_raw[1, 134]
# Changing the values in row 2, columns 134 to 141 to include Q_accent1
#converting value into a character
Q_accent1 <- as.character(Q_accent1)
LHQ3_results_raw[2, 134:135] <- lapply(LHQ3_results_raw[2, 134:135], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_accent1, x, sep = ", ")
})
# Update the value in column 136, row 1 to " L2 accent score"
LHQ3_results_raw[1, 136] <- "L2 accent score"
# Get the value from column 136, row 1
Q_accent2 <- LHQ3_results_raw[1, 136]
# Changing the values in row 2, columns 136 to 137 to include Q_accent2
#converting value into a character
Q_accent2 <- as.character(Q_accent2)
LHQ3_results_raw[2, 136:137] <- lapply(LHQ3_results_raw[2, 136:137], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_accent2, x, sep = ", ")
})
# Update the value in column 138, row 1 to " L3 accent score"
LHQ3_results_raw[1, 138] <- "L3 accent score"
# Get the value from column 138, row 1
Q_accent3 <- LHQ3_results_raw[1, 138]
# Changing the values in row 2, columns 138 to 139 to include Q_accent3
#converting value into a character
Q_accent3 <- as.character(Q_accent3)
LHQ3_results_raw[2, 138:139] <- lapply(LHQ3_results_raw[2, 138:139], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_accent3, x, sep = ", ")
})
# Update the value in column 140, row 1 to " L4 accent score"
LHQ3_results_raw[1, 140] <- "L4 accent score"
# Get the value from column 140, row 1
Q_accent4 <- LHQ3_results_raw[1, 140]
# Changing the values in row 2, columns 140 to 141 to include Q_accent4
#converting value into a character
Q_accent4 <- as.character(Q_accent4)
LHQ3_results_raw[2, 140:141] <- lapply(LHQ3_results_raw[2, 140:141], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_accent4, x, sep = ", ")
})
#repeating for question 17
# Update the value in column 142, row 1 to "Standardized testing L1"
LHQ3_results_raw[1, 142] <- "Standardized testing L1"
# Get the value from column 142, row 1
Q_testing1 <- LHQ3_results_raw[1, 142]
# Changing the values in row 2, columns 142 to 146 to include Q_testing1
#converting value into a character
Q_testing1 <- as.character(Q_testing1)
LHQ3_results_raw[2, 142:146] <- lapply(LHQ3_results_raw[2, 142:146], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_testing1, x, sep = ", ")
})
# Update the value in column 147, row 1 to "Standardized testing L2"
LHQ3_results_raw[1, 147] <- "Standardized testing L2"
# Get the value from column 147, row 1
Q_testing2 <- LHQ3_results_raw[1, 147]
# Changing the values in row 2, columns 147 to 151 to include Q_testing2
#converting value into a character
Q_testing2 <- as.character(Q_testing2)
LHQ3_results_raw[2, 147:151] <- lapply(LHQ3_results_raw[2, 147:151], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_testing2, x, sep = ", ")
})
# Update the value in column 152, row 1 to "Standardized testing L3"
LHQ3_results_raw[1, 152] <- "Standardized testing L3"
# Get the value from column 152, row 1
Q_testing3 <- LHQ3_results_raw[1, 152]
# Changing the values in row 2, columns 152 to 156 to include Q_testing3
#converting value into a character
Q_testing3 <- as.character(Q_testing3)
LHQ3_results_raw[2, 152:156] <- lapply(LHQ3_results_raw[2, 152:156], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_testing3, x, sep = ", ")
})
# Update the value in column 157, row 1 to "Standardized testing L4"
LHQ3_results_raw[1, 157] <- "Standardized testing L4"
# Get the value from column 157, row 1
Q_testing4 <- LHQ3_results_raw[1, 157]
# Changing the values in row 2, columns 157 to 161 to include Q_testing4
#converting value into a character
Q_testing4 <- as.character(Q_testing4)
LHQ3_results_raw[2, 157:161] <- lapply(LHQ3_results_raw[2, 157:161], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_testing4, x, sep = ", ")
})
#repeating for question 18, separated by language
# Update the value in column 162, row 1 to "Daily engagement L1"
LHQ3_results_raw[1, 162] <- "Daily engagement L1"
# Get the value from column 162, row 1
Q_daily1 <- LHQ3_results_raw[1, 162]
# Changing the values in row 2, columns 162 to 168 to include Q_daily1
#converting value into a character
Q_daily1 <- as.character(Q_daily1)
LHQ3_results_raw[2, 162:168] <- lapply(LHQ3_results_raw[2, 162:168], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_daily1, x, sep = ", ")
})
# Update the value in column 169, row 1 to "Daily engagement L2"
LHQ3_results_raw[1, 162] <- "Daily engagement L2"
# Get the value from column 162, row 1
Q_daily2 <- LHQ3_results_raw[1, 162]
# Changing the values in row 2, columns 162 to 175 to include Q_daily2
#converting value into a character
Q_daily2 <- as.character(Q_daily2)
LHQ3_results_raw[2, 162:175] <- lapply(LHQ3_results_raw[2, 162:175], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_daily2, x, sep = ", ")
})
# Update the value in column 176, row 1 to "Daily engagement L3"
LHQ3_results_raw[1, 176] <- "Daily engagement L3"
# Get the value from column 176, row 1
Q_daily3 <- LHQ3_results_raw[1, 176]
# Changing the values in row 2, columns 176 to 182 to include Q_daily3
#converting value into a character
Q_daily3 <- as.character(Q_daily3)
LHQ3_results_raw[2, 176:182] <- lapply(LHQ3_results_raw[2, 176:182], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_daily3, x, sep = ", ")
})
# Update the value in column 183, row 1 to "Daily engagement L4"
LHQ3_results_raw[1, 183] <- "Daily engagement L4"
# Get the value from column 183, row 1
Q_daily4 <- LHQ3_results_raw[1, 183]
# Changing the values in row 2, columns 183 to 189 to include Q_daily4
#converting value into a character
Q_daily4 <- as.character(Q_daily4)
LHQ3_results_raw[2, 183:189] <- lapply(LHQ3_results_raw[2, 183:189], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_daily4, x, sep = ", ")
})
#repeating for question 19
# Update the value in column 190, row 1 to "L1 h/day"
LHQ3_results_raw[1, 190] <- "L1 h/day"
# Get the value from column 190, row 1
Q_dailyuse1 <- LHQ3_results_raw[1, 190]
# Changing the values in row 2, columns 190 to 194 to include Q_dailyuse1
#converting value into a character
Q_dailyuse1 <- as.character(Q_dailyuse1)
LHQ3_results_raw[2, 190:194] <- lapply(LHQ3_results_raw[2, 190:194], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_dailyuse1, x, sep = ", ")
})
# Update the value in column 195, row 1 to "L2 h/day"
LHQ3_results_raw[1, 195] <- "L2 h/day"
# Get the value from column 195, row 1
Q_dailyuse2 <- LHQ3_results_raw[1, 195]
# Changing the values in row 2, columns 195 to 199 to include Q_dailyuse2
#converting value into a character
Q_dailyuse2 <- as.character(Q_dailyuse2)
LHQ3_results_raw[2, 195:199] <- lapply(LHQ3_results_raw[2, 195:199], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_dailyuse2, x, sep = ", ")
})
# Update the value in column 200, row 1 to "L3 h/day"
LHQ3_results_raw[1, 200] <- "L3 h/day"
# Get the value from column 200, row 1
Q_dailyuse3 <- LHQ3_results_raw[1, 200]
# Changing the values in row 2, columns 200 to 204 to include Q_dailyuse3
#converting value into a character
Q_dailyuse3 <- as.character(Q_dailyuse3)
LHQ3_results_raw[2, 200:204] <- lapply(LHQ3_results_raw[2, 200:204], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_dailyuse3, x, sep = ", ")
})
# Update the value in column 205, row 1 to "L4 h/day"
LHQ3_results_raw[1, 205] <- "L4 h/day"
# Get the value from column 205, row 1
Q_dailyuse4 <- LHQ3_results_raw[1, 205]
# Changing the values in row 2, columns 205 to 209 to include Q_dailyuse4
#converting value into a character
Q_dailyuse4 <- as.character(Q_dailyuse4)
LHQ3_results_raw[2, 205:209] <- lapply(LHQ3_results_raw[2, 205:209], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_dailyuse4, x, sep = ", ")
})
#repeating for question 20
# Update the value in column 210, row 1 to "Code-switching h/day"
LHQ3_results_raw[1, 210] <- "Code-switching h/day"
# Get the value from column 210, row 1
Q_Daily_codeswitching <- LHQ3_results_raw[1, 210]
# Changing the values in row 2, columns 142 to 221 to include Q_Daily_codeswitching
#converting value into a character
Q_Daily_codeswitching <- as.character(Q_Daily_codeswitching)
LHQ3_results_raw[2, 210:221] <- lapply(LHQ3_results_raw[2, 210:221], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_Daily_codeswitching, x, sep = ", ")
})
#repeating for question 21
# Update the value in column 222, row 1 to "Dominance / comfort"
LHQ3_results_raw[1, 222] <- "Dominance / comfort"
# Get the value from column 222, row 1
Q_Selfrated_language_dominance <- LHQ3_results_raw[1, 222]
# Changing the values in row 2, columns 142 to 237 to include Q_Selfrated_language_dominance
#converting value into a character
Q_Selfrated_language_dominance <- as.character(Q_Selfrated_language_dominance)
LHQ3_results_raw[2, 222:237] <- lapply(LHQ3_results_raw[2, 222:237], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_Selfrated_language_dominance, x, sep = ", ")
})
#repeating for question 21, organising by language
# Update the value in column 238, row 1 to "L1 internal use for"
LHQ3_results_raw[1, 238] <- "L1 internal use for"
# Get the value from column 238, row 1
Q_L1_for <- LHQ3_results_raw[1, 238]
# Changing the values in row 2, columns 238 to 245 to include Q_L1_for
#converting value into a character
Q_L1_for <- as.character(Q_L1_for)
LHQ3_results_raw[2, 238:245] <- lapply(LHQ3_results_raw[2, 238:245], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L1_for, x, sep = " ")
})
# Update the value in column 246, row 1 to "L2 internal use for"
LHQ3_results_raw[1, 246] <- "L2 use for"
# Get the value from column 246, row 1
Q_L2_for <- LHQ3_results_raw[1, 246]
# Changing the values in row 2, columns 246 to 253 to include Q_L2_for
#converting value into a character
Q_L2_for <- as.character(Q_L2_for)
LHQ3_results_raw[2, 246:253] <- lapply(LHQ3_results_raw[2, 246:253], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L2_for, x, sep = " ")
})
# Update the value in column 254, row 1 to "L3  internal use for"
LHQ3_results_raw[1, 254] <- "L3 internal use for"
# Get the value from column 254, row 1
Q_L3_for <- LHQ3_results_raw[1, 254]
# Changing the values in row 2, columns 254 to 261 to include Q_L3_for
#converting value into a character
Q_L3_for <- as.character(Q_L3_for)
LHQ3_results_raw[2, 254:261] <- lapply(LHQ3_results_raw[2, 254:261], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L3_for, x, sep = " ")
})
# Update the value in column 262, row 1 to "L4 internal use for"
LHQ3_results_raw[1, 262] <- "L4 internal use for"
# Get the value from column 262, row 1
Q_L4_for <- LHQ3_results_raw[1, 262]
# Changing the values in row 2, columns 262 to 269 to include Q_L4_for
#converting value into a character
Q_L4_for <- as.character(Q_L4_for)
LHQ3_results_raw[2, 262:269] <- lapply(LHQ3_results_raw[2, 262:269], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L4_for, x, sep = " ")
})
#repeating for question 23, organising by language
# Update the value in column 270, row 1 to "Friends who speak L1 %"
LHQ3_results_raw[1, 270] <- "Friends who speak L1 %"
# Get the value from column 270, row 1
Q_L1_competence_friends <- LHQ3_results_raw[1, 270]
# Changing the values in row 2, columns 270 to 271 to include Q_L1_competence_friends
#converting value into a character
Q_L1_competence_friends <- as.character(Q_L1_competence_friends)
LHQ3_results_raw[2, 270:271] <- lapply(LHQ3_results_raw[2, 270:271], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L1_competence_friends, x, sep = " ")
})
# Update the value in column 272, row 1 to "Friends who speak L2 %"
LHQ3_results_raw[1, 272] <- "Friends who speak L2 %"
# Get the value from column 270, row 1
Q_L2_competence_friends <- LHQ3_results_raw[1, 272]
# Changing the values in row 2, columns 272 to 273 to include Q_L2_competence_friends
#converting value into a character
Q_L2_competence_friends <- as.character(Q_L2_competence_friends)
LHQ3_results_raw[2, 272:273] <- lapply(LHQ3_results_raw[2, 272:273], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L2_competence_friends, x, sep = " ")
})
# Update the value in column 274, row 1 to "Friends who speak L3 %"
LHQ3_results_raw[1, 274] <- "Friends who speak L3 %"
# Get the value from column 270, row 1
Q_L2_competence_friends <- LHQ3_results_raw[1, 274]
# Changing the values in row 2, columns 274 to 275 to include Q_L2_competence_friends
#converting value into a character
Q_L2_competence_friends <- as.character(Q_L2_competence_friends)
LHQ3_results_raw[2, 274:275] <- lapply(LHQ3_results_raw[2, 274:275], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L2_competence_friends, x, sep = " ")
})
# Update the value in column 276, row 1 to "Friends who speak L4 %"
LHQ3_results_raw[1, 276] <- "Friends who speak L4 %"
# Get the value from column 270, row 1
Q_L2_competence_friends <- LHQ3_results_raw[1, 276]
# Changing the values in row 2, columns 274 to 275 to include Q_L2_competence_friends
#converting value into a character
Q_L2_competence_friends <- as.character(Q_L2_competence_friends)
LHQ3_results_raw[2, 276:277] <- lapply(LHQ3_results_raw[2, 276:277], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L2_competence_friends, x, sep = " ")
})
#repeating for question 24, organising by language
# Update the value in column 278, row 1 to "Cultural identification with L1"
LHQ3_results_raw[1, 278] <- "Identification with L1"
# Get the value from column 278, row 1
Q_L1_cultural_identification <- LHQ3_results_raw[1, 278]
# Changing the values in row 2, columns 278 to 184 to include Q_L1_cultural_identification
#converting value into a character
Q_L1_cultural_identification <- as.character(Q_L1_cultural_identification)
LHQ3_results_raw[2, 278:284] <- lapply(LHQ3_results_raw[2, 278:284], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L1_cultural_identification, x, sep = " ")
})
# Update the value in column 285, row 1 to "Cultural identification with L2"
LHQ3_results_raw[1, 285] <- "Identification with L2"
# Get the value from column 285, row 1
Q_L2_cultural_identification <- LHQ3_results_raw[1, 285]
# Changing the values in row 2, columns 285 to 291 to include Q_L2_cultural_identification
#converting value into a character
Q_L2_cultural_identification <- as.character(Q_L2_cultural_identification)
LHQ3_results_raw[2, 285:291] <- lapply(LHQ3_results_raw[2, 285:291], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L2_cultural_identification, x, sep = " ")
})
# Update the value in column 292, row 1 to "Cultural identification with L3"
LHQ3_results_raw[1, 292] <- "Identification with L3"
# Get the value from column 292, row 1
Q_L3_cultural_identification <- LHQ3_results_raw[1, 292]
# Changing the values in row 2, columns 292 to 298 to include Q_L3_cultural_identification
#converting value into a character
Q_L3_cultural_identification <- as.character(Q_L3_cultural_identification)
LHQ3_results_raw[2, 292:298] <- lapply(LHQ3_results_raw[2, 292:298], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L3_cultural_identification, x, sep = " ")
})
# Update the value in column 299, row 1 to "Cultural identification with L4"
LHQ3_results_raw[1, 299] <- "Identification with L4"
# Get the value from column 299, row 1
Q_L4_cultural_identification <- LHQ3_results_raw[1, 299]
# Changing the values in row 2, columns 292 to 305 to include Q_L4_cultural_identification
#converting value into a character
Q_L4_cultural_identification <- as.character(Q_L4_cultural_identification)
LHQ3_results_raw[2, 299:305] <- lapply(LHQ3_results_raw[2, 299:305], function(x) {
# Convert x to character if it is not already
x <- as.character(x)
paste(Q_L4_cultural_identification, x, sep = " ")
})
# Remove the first row
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Get the new header from the first row
new_header <- LHQ3_results_raw[1, ]
# Remove the first row again to set the new header
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
# Set the new header
names(LHQ3_results_raw) <- new_header
# View the updated data frame
View(LHQ3_results_raw)
#matching the participants' ID with the participants' number by using the Norway
#session logbook as guide
logbook_path <- here("Background", "LHQ3", "Norway site, session_logbook.xlsx")
Norway_session_logbook <- read_excel(logbook_path, col_names = TRUE)
View(Norway_session_logbook)
# Rename columns to match LHQ3_results_raw
Norway_session_logbook <- Norway_session_logbook %>%
rename(
Participant_ID = 1,
Participant_number = 2,
Pseudolanguage_version = 3
) %>%
select(Participant_ID, Participant_number, Pseudolanguage_version)
# Verify Norway_session_logbook
View(Norway_session_logbook)
library(dplyr)
LHQ3_data <- LHQ3_results_raw %>%
left_join(Norway_session_logbook, by = "Participant_ID") %>%
rename(
Participant_number_original = Participant_number.x,
Participant_number_new = Participant_number.y
) %>%
mutate(
Participant_number = ifelse(is.na(Participant_number_new), Participant_number_original, Participant_number_new)
) %>%
select(-Participant_number_original, -Participant_number_new)  # Remove the extra Participant_number column
# View the corrected data frame
View(LHQ3_data)
#calculate language entropy
#isolate language proficiency
#LHQ3 data importation and transformation
library(readxl)
library(dplyr)
library(tidyr)
library(here)
library(tidyverse)
file_path <- here("Background", "LHQ3", "LHQ3 results raw.xlsx")
# Read the Excel file and treat the first row as regular text as it is just
#stating the type of questionnaire used when automatically downloaded form the
#LHQ3 website
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row that reads "LHQ3"
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
View(LHQ3_results_raw)
# Read the Excel file and treat the first row as regular text as it is just
#stating the type of questionnaire used when automatically downloaded form the
#LHQ3 website
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
file_path <- here("Background", "LHQ3", "LHQ3 results raw.xlsx")
# Read the Excel file and treat the first row as regular text as it is just
#stating the type of questionnaire used when automatically downloaded form the
#LHQ3 website
LHQ3_results_raw <- read_excel(file_path, sheet = "Sheet1", col_names = FALSE)
# Remove the first row that reads "LHQ3"
LHQ3_results_raw <- LHQ3_results_raw[-1, ]
View(LHQ3_results_raw)
