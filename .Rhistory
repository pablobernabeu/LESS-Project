<<<<<<< HEAD
print(left_posterior_Ungrammatical_S2_N200)
print(left_posterior_Grammatical_S2_N200)
print(right_posterior_Ungrammatical_S2_N200)
print(right_posterior_Grammatical_S2_N200)
print(midline_anterior_Ungrammatical_S2_N200)
print(midline_anterior_Grammatical_S2_N200)
print(midline_medial_Ungrammatical_S2_N200)
print(midline_medial_Grammatical_S2_N200)
print(midline_posterior_Ungrammatical_S2_N200)
print(midline_posterior_Grammatical_S2_N200)
pattern1_S2_N300 = "^[0-9].*N300_S101.txt"
print(pattern1_S2_N300)
pattern2_S2_N300 = "^[0-9].*N300_S102.txt"
file_listS101_S2_N300 <- list.files(pattern = pattern1_S2_N300)
print(file_listS101_S2_N300)
file_listS102_S2_N300 <- list.files(pattern = pattern2_S2_N300)
print(file_listS102_S2_N300)
pattern1_S2_N300 = "^[0-9].*N300_S101.txt"
print(pattern1_S2_N300)
pattern2_S2_N300 = "^[0-9].*N300_S102.txt"
file_listS101_S2_N300 <- list.files(pattern = pattern1_S2_N300)
print(file_listS101_S2_N300)
file_listS102_S2_N300 <- list.files(pattern = pattern2_S2_N300)
print(file_listS102_S2_N300)
#reading tables
data_listS101_S2_N300 <- lapply(file_listS101_S2_N300, function(file) {
read.table(file, header = TRUE, sep = "")
})
data_listS102_S2_N300 <- lapply(file_listS102_S2_N300, function(file) {
read.table(file, header = TRUE, sep = "")
})
lapply(data_listS102_S2_N300, head)
# Checking dimensions of the first data frame
str(data_listS101_S2_N300[[1]])
head(data_listS101_S2_N300[[1]])
#checking if rows are missing and removing them
if (all(sapply(data_listS101_S2_N300, nrow) > 0)) {
S2_S101_N300 <- Reduce(function(...) merge(..., all = TRUE), data_listS101_S2_N300)
View(S2_S101_N300)
} else {
print("Some data frames in data_listS101 have no rows.")
}
S2_S101_N300 <- Reduce(function(...) merge(..., all = TRUE), data_listS101_S2_N300)
View(S2_S101_N300)
# Checking dimensions of the first data frame
str(data_listS101_S2_N300[[1]])
#reading tables
data_listS101_S2_N300 <- lapply(file_listS101_S2_N300, function(file) {
read.table(file, header = TRUE, sep = "")
})
data_listS102_S2_N300 <- lapply(file_listS102_S2_N300, function(file) {
read.table(file, header = TRUE, sep = "")
})
lapply(data_listS102_S2_N300, head)
print(pattern1_S2_N300)
pattern2_S2_N300 = "^[0-9].*N300_S102.txt"
# participants need to be separated by language and by grammaticality
=======
setwd("Session 2/Session2_Export")
setwd("EEG/analysis/Session 2/Session2_Export")
setwd("EEG/data/Session 2/Session2_Export")
renv::activate()
renv::status()
renv::snapshot()
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
library(lme4)
library(stringr)
library(ggplot2)
library(dplyr)
library(readr)
library(rmarkdown)
<<<<<<< HEAD
setwd("EEG/data/Session 2/Export")
pattern1_S2_N200 = "^[0-9].*N200_S101.txt"
print(pattern1_S2_N200)
pattern2_S2_N200 = "^[0-9].*N200_S102.txt"
#creation of two tables, one for the Grammatical and one for the Ungrammatical condition
=======
setwd("EEG/data/Session 2/Session2_Export")
pattern1_S2_N200 = "^[0-9].*N200_S101.txt"
print(pattern1_S2_N200)
pattern2_S2_N200 = "^[0-9].*N200_S102.txt"
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
file_listS101_S2_N200 <- list.files(pattern = pattern1_S2_N200)
print(file_listS101_S2_N200)
file_listS102_S2_N200 <- list.files(pattern = pattern2_S2_N200)
print(file_listS102_S2_N200)
<<<<<<< HEAD
#reading the tables
data_listS101_S2_N200 <- lapply(file_listS101_S2_N200, function(file) {
read.table(file, header = TRUE, sep = "")
})
=======
data_listS101_S2_N200 <- lapply(file_listS101_S2_N200, function(file) {
read.table(file, header = TRUE, sep = "")
})
View(data_listS101_S2_N200)
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
#Checking dimensions of the first data frame
str(data_listS101_S2_N200[[1]])
head(data_listS101_S2_N200[[1]])
#checking if rows are missing and removing them
if (all(sapply(data_listS101_S2_N200, nrow) > 0)) {
S101_N200 <- Reduce(function(...) merge(..., all = TRUE), data_listS101_S2_N200)
View(S101_N200)
} else {
print("Some data frames in data_listS101_S2_N200 have no rows.")
}
data_listS102_S2_N200 <- lapply(file_listS102_S2_N200, function(file) {
read.table(file, header = TRUE, sep = "")
})
lapply(data_listS102_S2_N200, head)
if (all(sapply(data_listS102_S2_N200, nrow) > 0)) {
S102_N200 <- Reduce(function(...) merge(..., all = TRUE), data_listS102_S2_N200)
View(S102_N200)
} else {
print("Some data frames in data_list2_S2_N200 have no rows.")
}
S2_Grammatical_N200 <- do.call(rbind, data_listS101_S2_N200)
str(S2_Grammatical_N200)
head(S2_Grammatical_N200)
S2_Ungrammatical_N200 <- do.call(rbind, data_listS102_S2_N200)
head(S2_Ungrammatical_N200)
#converting the tables into data frames
S2_Grammatical_N200 <- as.data.frame(S2_Grammatical_N200)
S2_Ungrammatical_N200 <- as.data.frame(S2_Ungrammatical_N200)
<<<<<<< HEAD
=======
View(S2_Grammatical_N200)
View(S2_Ungrammatical_N200)
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
#the decimal point is a comma in BrainVision analyzer export files
#converting commas to periods in the dataframe
S2_Grammatical_N200 <- S2_Grammatical_N200 %>%
mutate(across(everything(), ~ gsub(",",".",., fixed = TRUE)))
S2_Ungrammatical_N200 <- S2_Ungrammatical_N200 %>%
mutate(across(everything(), ~ gsub(",",".",., fixed = TRUE)))
#Converting columns to numeric if necessary
S2_Grammatical_N200 <- S2_Grammatical_N200 %>% mutate(across(everything(), as.numeric))
S2_Ungrammatical_N200 <- S2_Ungrammatical_N200 %>% mutate(across(everything(), as.numeric))
<<<<<<< HEAD
=======
# dividing electrode placements into areas of interest
# averaging all rows and columns so that only one value per region
# Extracting columns and converting to numeric
# Calculating row-wise means excluding NA
# Calculating the overall mean of row means
# For Grammatical condition
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
left_medial_Grammatical_row_means_S2_N200 <- rowMeans(S2_Grammatical_N200[, c("T7.Average", "C3.Average", "CP5.Average")], na.rm = TRUE)
left_medial_Grammatical_S2_N200 <- mean(left_medial_Grammatical_row_means_S2_N200, na.rm = TRUE)
right_medial_Grammatical_row_means_S2_N200 <- rowMeans(S2_Grammatical_N200 [, c("C4.Average", "T8.Average", "CP6.Average")], na.rm = TRUE)
right_medial_Grammatical_S2_N200 <- mean(right_medial_Grammatical_row_means_S2_N200, na.rm = TRUE)
left_anterior_Grammatical_row_means_S2_N200 <- rowMeans(S2_Grammatical_N200[, c("Fp1.Average", "F3.Average", "F7.Average", "FT9.Average", "FC5.Average")], na.rm = TRUE)
left_anterior_Grammatical_S2_N200 <- mean(left_anterior_Grammatical_row_means_S2_N200, na.rm = TRUE)
right_anterior_Grammatical_row_means_S2_N200 <- rowMeans(S2_Grammatical_N200[, c("Fp2.Average", "F4.Average", "F8.Average", "FC6.Average", "FT10.Average")], na.rm = TRUE)
right_anterior_Grammatical_S2_N200 <- mean(right_anterior_Grammatical_row_means_S2_N200, na.rm = TRUE)
left_posterior_Grammatical_row_means_S2_N200 <- rowMeans(S2_Grammatical_N200 [, c("P7.Average", "P3.Average", "O1.Average")], na.rm = TRUE)
left_posterior_Grammatical_S2_N200 <- mean(left_posterior_Grammatical_row_means_S2_N200, na.rm = TRUE)
right_posterior_Grammatical_row_means_S2_N200 <- rowMeans(S2_Grammatical_N200 [,c ("P4.Average", "P8.Average", "O2.Average")], na.rm = TRUE)
right_posterior_Grammatical_S2_N200 <- mean(right_posterior_Grammatical_row_means_S2_N200, na.rm = TRUE)
midline_anterior_Grammatical_row_means_S2_N200 <- rowMeans(S2_Grammatical_N200 [, c ("Fz.Average", "FC1.Average", "FC2.Average")], na.rm = TRUE)
midline_anterior_Grammatical_S2_N200 <- mean(midline_anterior_Grammatical_row_means_S2_N200, na.rm = TRUE)
midline_medial_Grammatical_row_means_S2_N200 <- rowMeans(S2_Grammatical_N200 [,c ("Cz.Average", "CP1.Average", "CP2.Average")], na.rm = TRUE)
midline_medial_Grammatical_S2_N200 <- mean(midline_medial_Grammatical_row_means_S2_N200, na.rm = TRUE)
midline_posterior_Grammatical_row_means_S2_N200 <- rowMeans(S2_Grammatical_N200[,c ("Pz.Average", "Oz.Average")], na.rm = TRUE)
midline_posterior_Grammatical_S2_N200 <- mean(midline_posterior_Grammatical_row_means_S2_N200, na.rm = TRUE)
<<<<<<< HEAD
=======
# For Ungrammatical condition
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
left_medial_Ungrammatical_row_means_S2_N200 <- rowMeans(S2_Ungrammatical_N200[, c("T7.Average", "C3.Average", "CP5.Average")], na.rm = TRUE)
left_medial_Ungrammatical_S2_N200 <- mean(left_medial_Ungrammatical_row_means_S2_N200, na.rm = TRUE)
right_medial_Ungrammatical_row_means_S2_N200 <- rowMeans(S2_Ungrammatical_N200 [, c("C4.Average", "T8.Average", "CP6.Average")], na.rm = TRUE)
right_medial_Ungrammatical_S2_N200 <- mean(right_medial_Ungrammatical_row_means_S2_N200, na.rm = TRUE)
left_anterior_Ungrammatical_row_means_S2_N200 <- rowMeans(S2_Ungrammatical_N200[, c("Fp1.Average", "F3.Average", "F7.Average", "FT9.Average", "FC5.Average")], na.rm = TRUE)
left_anterior_Ungrammatical_S2_N200 <- mean(left_anterior_Ungrammatical_row_means_S2_N200, na.rm = TRUE)
right_anterior_Ungrammatical_row_means_S2_N200 <- rowMeans(S2_Ungrammatical_N200[, c("Fp2.Average", "F4.Average", "F8.Average", "FC6.Average", "FT10.Average")], na.rm = TRUE)
right_anterior_Ungrammatical_S2_N200 <- mean(right_anterior_Ungrammatical_row_means_S2_N200, na.rm = TRUE)
left_posterior_Ungrammatical_row_means_S2_N200 <- rowMeans(S2_Ungrammatical_N200 [, c("P7.Average", "P3.Average", "O1.Average")], na.rm = TRUE)
left_posterior_Ungrammatical_S2_N200 <- mean(left_posterior_Ungrammatical_row_means_S2_N200, na.rm = TRUE)
right_posterior_Ungrammatical_row_means_S2_N200 <- rowMeans(S2_Ungrammatical_N200 [,c ("P4.Average", "P8.Average", "O2.Average")], na.rm = TRUE)
right_posterior_Ungrammatical_S2_N200 <- mean(right_posterior_Ungrammatical_row_means_S2_N200, na.rm = TRUE)
midline_anterior_Ungrammatical_row_means_S2_N200 <- rowMeans(S2_Ungrammatical_N200 [, c ("Fz.Average", "FC1.Average", "FC2.Average")], na.rm = TRUE)
midline_anterior_Ungrammatical_S2_N200 <- mean(midline_anterior_Ungrammatical_row_means_S2_N200, na.rm = TRUE)
midline_medial_Ungrammatical_row_means_S2_N200 <- rowMeans(S2_Ungrammatical_N200 [,c ("Cz.Average", "CP1.Average", "CP2.Average")], na.rm = TRUE)
midline_medial_Ungrammatical_S2_N200 <- mean(midline_medial_Ungrammatical_row_means_S2_N200, na.rm = TRUE)
midline_posterior_Ungrammatical_row_means_S2_N200 <- rowMeans(S2_Ungrammatical_N200[,c ("Pz.Average", "Oz.Average")], na.rm = TRUE)
midline_posterior_Ungrammatical_S2_N200 <- mean(midline_posterior_Ungrammatical_row_means_S2_N200, na.rm = TRUE)
# Print results
print(left_medial_Ungrammatical_S2_N200)
print(left_medial_Grammatical_S2_N200)
print(right_medial_Ungrammatical_S2_N200)
print(right_medial_Grammatical_S2_N200)
print(left_anterior_Ungrammatical_S2_N200)
print(left_anterior_Grammatical_S2_N200)
print(right_anterior_Ungrammatical_S2_N200)
print(right_anterior_Grammatical_S2_N200)
print(left_posterior_Ungrammatical_S2_N200)
print(left_posterior_Grammatical_S2_N200)
print(right_posterior_Ungrammatical_S2_N200)
print(right_posterior_Grammatical_S2_N200)
print(midline_anterior_Ungrammatical_S2_N200)
print(midline_anterior_Grammatical_S2_N200)
print(midline_medial_Ungrammatical_S2_N200)
print(midline_medial_Grammatical_S2_N200)
print(midline_posterior_Ungrammatical_S2_N200)
print(midline_posterior_Grammatical_S2_N200)
<<<<<<< HEAD
=======
#PLOTTING EXPERIMENTS
# Combine the data into a single dataframe for plotting
#comparison_df <- data.frame(
#  Condition = rep(c("Grammatical", "Ungrammatical"), each = length(left_medial_Grammatical)),
#  Value = c(rep(left_medial_Grammatical, length(left_medial_Ungrammatical)), rep(left_medial_Ungrammatical, length(left_medial_Grammatical)))
#)
# Create a boxplot
#library(ggplot2)
#ggplot(comparison_df, aes(x = Condition, y = Value, fill = Condition)) +
#  geom_boxplot() +
# labs(title = "Comparison of Left Medial Activation", x = "Condition", y = "Left Medial Activation") +
#  scale_fill_manual(values = c("Grammatical" = "#00AFBB", "Ungrammatical" = "#E7B800")) +
# theme_minimal()
# Create a violin plot
#ggplot(comparison_df, aes(x = Condition, y = Value, fill = Condition)) +
# geom_violin() +
#labs(title = "Comparison of Left Medial Activation", x = "Condition", y = "Left Medial Activation") +
#scale_fill_manual(values = c("Grammatical" = "#00AFBB", "Ungrammatical" = "#E7B800")) +
#theme_minimal()
#Session 2, N300
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP in two different conditions in order to create two sets of data
#pattern1 is the Grammatical condition, marked as S101
#pattern 2 is the Ungrammatical condition, marked as S102
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
pattern1_S2_N300 = "^[0-9].*N300_S101.txt"
print(pattern1_S2_N300)
pattern2_S2_N300 = "^[0-9].*N300_S102.txt"
file_listS101_S2_N300 <- list.files(pattern = pattern1_S2_N300)
print(file_listS101_S2_N300)
file_listS102_S2_N300 <- list.files(pattern = pattern2_S2_N300)
print(file_listS102_S2_N300)
#reading tables
data_listS101_S2_N300 <- lapply(file_listS101_S2_N300, function(file) {
read.table(file, header = TRUE, sep = "")
})
data_listS102_S2_N300 <- lapply(file_listS102_S2_N300, function(file) {
read.table(file, header = TRUE, sep = "")
})
lapply(data_listS102_S2_N300, head)
# Checking dimensions of the first data frame
str(data_listS101_S2_N300[[1]])
head(data_listS101_S2_N300[[1]])
#checking if rows are missing and removing them
if (all(sapply(data_listS101_S2_N300, nrow) > 0)) {
S2_S101_N300 <- Reduce(function(...) merge(..., all = TRUE), data_listS101_S2_N300)
View(S2_S101_N300)
} else {
print("Some data frames in data_listS101 have no rows.")
}
if (all(sapply(data_listS102_S2_N300, nrow) > 0)) {
S2_S102_N300 <- Reduce(function(...) merge(..., all = TRUE),data_listS102_S2_N300)
View(S2_S102_N300)
} else {
print("Some data frames in data_list2 have no rows.")
}
Grammatical_S2_N300 <- do.call(rbind, data_listS101_S2_N300)
str(Grammatical_S2_N300)
Ungrammatical_S2_N300 <- do.call(rbind, data_listS102_S2_N300)
head(Ungrammatical_S2_N300)
#converting the data lists into data frames
S2_Grammatical_N300 <- as.data.frame(Grammatical_S2_N300)
S2_Ungrammatical_N300 <- as.data.frame(Ungrammatical_S2_N300)
#the decimal point is a comma in BrainVision analyzer export files
#converting commas to periods in the dataframe
S2_Grammatical_N300 <- S2_Grammatical_N300 %>%
mutate(across(everything(), ~ gsub(",",".",., fixed = TRUE)))
S2_Ungrammatical_N300 <- S2_Ungrammatical_N300 %>%
mutate(across(everything(), ~ gsub(",",".",., fixed = TRUE)))
#Converting columns to numeric if necessary
S2_Grammatical_N300 <- S2_Grammatical_N300 %>% mutate(across(everything(), as.numeric))
S2_Ungrammatical_N300 <- S2_Ungrammatical_N300 %>% mutate(across(everything(), as.numeric))
<<<<<<< HEAD
=======
# dividing data frames into areas of interest in the Grammatical condition S101
# averaging all rows and columns so that only one value per region
# Extracting columns and convert to numeric
# Calculating row-wise means excluding NA
# Calculating the overall mean of row means
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
#left_medial_Grammatical
left_medial_Grammatical_row_means_S2_N300 <- rowMeans(S2_Grammatical_N300[, c("T7.Average", "C3.Average", "CP5.Average")], na.rm = TRUE)
left_medial_Grammatical_S2_N300 <- mean(left_medial_Grammatical_row_means_S2_N300, na.rm = TRUE)
right_medial_Grammatical_row_means_S2_N300 <- rowMeans(S2_Grammatical_N300 [, c("C4.Average", "T8.Average", "CP6.Average")], na.rm = TRUE)
right_medial_Grammatical_S2_N300 <- mean(right_medial_Grammatical_row_means_S2_N300, na.rm = TRUE)
left_anterior_Grammatical_row_means_S2_N300 <- rowMeans(S2_Grammatical_N300[, c("Fp1.Average", "F3.Average", "F7.Average", "FT9.Average", "FC5.Average")], na.rm = TRUE)
left_anterior_Grammatical_S2_N300 <- mean(left_anterior_Grammatical_row_means_S2_N300, na.rm = TRUE)
right_anterior_Grammatical_row_means_S2_N300 <- rowMeans(S2_Grammatical_N300[, c("Fp2.Average", "F4.Average", "F8.Average", "FC6.Average", "FT10.Average")], na.rm = TRUE)
right_anterior_Grammatical_S2_N300 <- mean(right_anterior_Grammatical_row_means_S2_N300, na.rm = TRUE)
left_posterior_Grammatical_row_means_S2_N300 <- rowMeans(S2_Grammatical_N300 [, c("P7.Average", "P3.Average", "O1.Average")], na.rm = TRUE)
left_posterior_Grammatical_S2_N300 <- mean(left_posterior_Grammatical_row_means_S2_N300, na.rm = TRUE)
right_posterior_Grammatical_row_means_S2_N300 <- rowMeans(S2_Grammatical_N300 [,c ("P4.Average", "P8.Average", "O2.Average")], na.rm = TRUE)
right_posterior_Grammatical_S2_N300 <- mean(right_posterior_Grammatical_row_means_S2_N300, na.rm = TRUE)
midline_anterior_Grammatical_row_means_S2_N300 <- rowMeans(S2_Grammatical_N300 [, c ("Fz.Average", "FC1.Average", "FC2.Average")], na.rm = TRUE)
midline_anterior_Grammatical_S2_N300 <- mean(midline_anterior_Grammatical_row_means_S2_N300, na.rm = TRUE)
midline_medial_Grammatical_row_means_S2_N300 <- rowMeans(S2_Grammatical_N300 [,c ("Cz.Average", "CP1.Average", "CP2.Average")], na.rm = TRUE)
midline_medial_Grammatical_S2_N300 <- mean(midline_medial_Grammatical_row_means_S2_N300, na.rm = TRUE)
midline_posterior_Grammatical_row_means_S2_N300 <- rowMeans(S2_Grammatical_N300[,c ("Pz.Average", "Oz.Average")], na.rm = TRUE)
midline_posterior_Grammatical_S2_N300 <- mean(midline_posterior_Grammatical_row_means_S2_N300, na.rm = TRUE)
<<<<<<< HEAD
=======
#Ungrammatical condition
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
left_medial_Ungrammatical_row_means_S2_N300 <- rowMeans(S2_Ungrammatical_N300[, c("T7.Average", "C3.Average", "CP5.Average")], na.rm = TRUE)
left_medial_Ungrammatical_S2_N300 <- mean(left_medial_Ungrammatical_row_means_S2_N300, na.rm = TRUE)
right_medial_Ungrammatical_row_means_S2_N300 <- rowMeans(S2_Ungrammatical_N300 [, c("C4.Average", "T8.Average", "CP6.Average")], na.rm = TRUE)
right_medial_Ungrammatical_S2_N300 <- mean(right_medial_Ungrammatical_row_means_S2_N300, na.rm = TRUE)
left_anterior_Ungrammatical_row_means_S2_N300 <- rowMeans(S2_Ungrammatical_N300[, c("Fp1.Average", "F3.Average", "F7.Average", "FT9.Average", "FC5.Average")], na.rm = TRUE)
left_anterior_Ungrammatical_S2_N300 <- mean(left_anterior_Ungrammatical_row_means_S2_N300, na.rm = TRUE)
right_anterior_Ungrammatical_row_means_S2_N300 <- rowMeans(S2_Ungrammatical_N300[, c("Fp2.Average", "F4.Average", "F8.Average", "FC6.Average", "FT10.Average")], na.rm = TRUE)
right_anterior_Ungrammatical_S2_N300 <- mean(right_anterior_Ungrammatical_row_means_S2_N300, na.rm = TRUE)
left_posterior_Ungrammatical_row_means_S2_N200 <- rowMeans(S2_Ungrammatical_N300 [, c("P7.Average", "P3.Average", "O1.Average")], na.rm = TRUE)
left_posterior_Ungrammatical_S2_N300 <- mean(left_posterior_Ungrammatical_row_means_S2_N200, na.rm = TRUE)
right_posterior_Ungrammatical_row_means_S2_N300 <- rowMeans(S2_Ungrammatical_N300 [,c ("P4.Average", "P8.Average", "O2.Average")], na.rm = TRUE)
right_posterior_Ungrammatical_S2_N300 <- mean(right_posterior_Ungrammatical_row_means_S2_N300, na.rm = TRUE)
midline_anterior_Ungrammatical_row_means_S2_N300 <- rowMeans(S2_Ungrammatical_N300 [, c ("Fz.Average", "FC1.Average", "FC2.Average")], na.rm = TRUE)
midline_anterior_Ungrammatical_S2_N300 <- mean(midline_anterior_Ungrammatical_row_means_S2_N300, na.rm = TRUE)
midline_medial_Ungrammatical_row_means_S2_N300 <- rowMeans(S2_Ungrammatical_N300 [,c ("Cz.Average", "CP1.Average", "CP2.Average")], na.rm = TRUE)
midline_medial_Ungrammatical_S2_N300 <- mean(midline_medial_Ungrammatical_row_means_S2_N300, na.rm = TRUE)
midline_posterior_Ungrammatical_row_means_S2_N300 <- rowMeans(S2_Ungrammatical_N300[,c ("Pz.Average", "Oz.Average")], na.rm = TRUE)
midline_posterior_Ungrammatical_S2_N300 <- mean(midline_posterior_Ungrammatical_row_means_S2_N300, na.rm = TRUE)
# Print results
print(left_medial_Ungrammatical_S2_N300)
print(left_medial_Grammatical_S2_N300)
print(right_medial_Ungrammatical_S2_N300)
print(right_medial_Grammatical_S2_N300)
print(left_anterior_Ungrammatical_S2_N300)
print(left_anterior_Grammatical_S2_N300)
print(right_anterior_Ungrammatical_S2_N300)
print(right_anterior_Grammatical_S2_N300)
print(left_posterior_Ungrammatical_S2_N300)
print(left_posterior_Grammatical_S2_N300)
print(right_posterior_Ungrammatical_S2_N300)
print(right_posterior_Grammatical_S2_N300)
print(midline_anterior_Ungrammatical_S2_N300)
print(midline_anterior_Grammatical_S2_N300)
print(midline_medial_Ungrammatical_S2_N300)
print(midline_medial_Grammatical_S2_N300)
print(midline_posterior_Ungrammatical_S2_N300)
print(midline_posterior_Grammatical_S2_N300)
<<<<<<< HEAD
=======
###############################################################
#Session 2, N600
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP in two different conditions in order to create two sets of data
#pattern1 is the Grammatical condition, marked as S101
#pattern 2 is the Ungrammatical condition, marked as S102
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
pattern1_S2_N600 = "^[0-9].*N600_S101.txt"
print(pattern1_S2_N600)
pattern2_S2_N600 = "^[0-9].*N600_S102.txt"
file_listS101_S2_N600 <- list.files(pattern = pattern1_S2_N600)
print(file_listS101_S2_N600)
file_listS102_S2_N600 <- list.files(pattern = pattern2_S2_N600)
print(file_listS102_S2_N600)
<<<<<<< HEAD
=======
#reading table
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
data_listS101_S2_N600 <- lapply(file_listS101_S2_N600, function(file) {
read.table(file, header = TRUE, sep = "")
})
data_listS102_S2_N600 <- lapply(file_listS102_S2_N600, function(file) {
read.table(file, header = TRUE, sep = "")
})
# Check dimensions of the first data frame
str(data_listS101_S2_N600[[1]])
head(data_listS102_S2_N600[[1]])
#ensure variables are consistent S101_N200 should have s2
#checking if rows are missing and removing them
if (all(sapply(data_listS101_S2_N600, nrow) > 0)) {
S101_N200 <- Reduce(function(...) merge(..., all = TRUE), data_listS101_S2_N600)
View(S101_N200)
} else {
print("Some data frames in data_listS101 have no rows.")
}
if (all(sapply(data_listS102_S2_N600, nrow) > 0)) {
S102_N600 <- Reduce(function(...) merge(..., all = TRUE), data_listS102_S2_N600)
View(S102_N600)
} else {
print("Some data frames in data_list2 have no rows.")
}
#converting datalists into dataframes
S2_Grammatical_N600 <- do.call(rbind, data_listS101_S2_N600)
head(S2_Grammatical_N600)
S2_Ungrammatical_N600 <- do.call(rbind, data_listS102_S2_N600)
head(S2_Ungrammatical_N600)
#the decimal point is a comma in BrainVision analyzer export files
#converting commas to periods in the dataframe
S2_Grammatical_N600 <- S2_Grammatical_N600 %>%
mutate(across(everything(), ~ gsub(",",".",., fixed = TRUE)))
S2_Ungrammatical_N600 <- S2_Ungrammatical_N600 %>%
mutate(across(everything(), ~ gsub(",",".",., fixed = TRUE)))
#Converting columns to numeric if necessary
S2_Grammatical_N600 <- S2_Grammatical_N600 %>% mutate(across(everything(), as.numeric))
S2_Ungrammatical_N600 <- S2_Ungrammatical_N600 %>% mutate(across(everything(), as.numeric))
<<<<<<< HEAD
=======
#dividing data frames into areas of interest in the Grammatical condition S101
#average all rows and columns so that only one value per region
# Extract columns and convert to numeric
# Calculate row-wise means excluding NA
# Calculate the overall mean of row means
#Grammatical condition
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
left_medial_Grammatical_row_means_S2_N600 <- rowMeans(S2_Grammatical_N600[, c("T7.Average", "C3.Average", "CP5.Average")], na.rm = TRUE)
left_medial_Grammatical_S2_N600 <- mean(left_medial_Grammatical_row_means_S2_N600, na.rm = TRUE)
right_medial_Grammatical_row_means_S2_N600 <- rowMeans(S2_Grammatical_N600 [, c("C4.Average", "T8.Average", "CP6.Average")], na.rm = TRUE)
right_medial_Grammatical_S2_N600 <- mean(right_medial_Grammatical_row_means_S2_N600, na.rm = TRUE)
left_anterior_Grammatical_row_means_S2_N600 <- rowMeans(S2_Grammatical_N600[, c("Fp1.Average", "F3.Average", "F7.Average", "FT9.Average", "FC5.Average")], na.rm = TRUE)
left_anterior_Grammatical_S2_N600 <- mean(left_anterior_Grammatical_row_means_S2_N600, na.rm = TRUE)
right_anterior_Grammatical_row_means_S2_N600 <- rowMeans(S2_Grammatical_N600[, c("Fp2.Average", "F4.Average", "F8.Average", "FC6.Average", "FT10.Average")], na.rm = TRUE)
right_anterior_Grammatical_S2_N600 <- mean(right_anterior_Grammatical_row_means_S2_N600, na.rm = TRUE)
left_posterior_Grammatical_row_means_S2_N600 <- rowMeans(S2_Grammatical_N600 [, c("P7.Average", "P3.Average", "O1.Average")], na.rm = TRUE)
left_posterior_Grammatical_S2_N600 <- mean(left_posterior_Grammatical_row_means_S2_N600, na.rm = TRUE)
right_posterior_Grammatical_row_means_S2_N600 <- rowMeans(S2_Grammatical_N600 [,c ("P4.Average", "P8.Average", "O2.Average")], na.rm = TRUE)
right_posterior_Grammatical_S2_N600 <- mean(right_posterior_Grammatical_row_means_S2_N600, na.rm = TRUE)
midline_anterior_Grammatical_row_means_S2_N600 <- rowMeans(S2_Grammatical_N600 [, c ("Fz.Average", "FC1.Average", "FC2.Average")], na.rm = TRUE)
midline_anterior_Grammatical_S2_N600 <- mean(midline_anterior_Grammatical_row_means_S2_N600, na.rm = TRUE)
midline_medial_Grammatical_row_means_S2_N600 <- rowMeans(S2_Grammatical_N600 [,c ("Cz.Average", "CP1.Average", "CP2.Average")], na.rm = TRUE)
midline_medial_Grammatical_S2_N600 <- mean(midline_medial_Grammatical_row_means_S2_N600, na.rm = TRUE)
midline_posterior_Grammatical_row_means_S2_N600 <- rowMeans(S2_Grammatical_N600[,c ("Pz.Average", "Oz.Average")], na.rm = TRUE)
midline_posterior_Grammatical_S2_N600 <- mean(midline_posterior_Grammatical_row_means_S2_N600, na.rm = TRUE)
<<<<<<< HEAD
=======
#Ungrammatical condition
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
left_medial_Ungrammatical_row_means_S2_N600 <- rowMeans(S2_Ungrammatical_N600[, c("T7.Average", "C3.Average", "CP5.Average")], na.rm = TRUE)
left_medial_Ungrammatical_S2_N600 <- mean(left_medial_Ungrammatical_row_means_S2_N600, na.rm = TRUE)
right_medial_Ungrammatical_row_means_S2_N600 <- rowMeans(S2_Ungrammatical_N600 [, c("C4.Average", "T8.Average", "CP6.Average")], na.rm = TRUE)
right_medial_Ungrammatical_S2_N600 <- mean(right_medial_Ungrammatical_row_means_S2_N600, na.rm = TRUE)
left_anterior_Ungrammatical_row_means_S2_N600 <- rowMeans(S2_Ungrammatical_N600[, c("Fp1.Average", "F3.Average", "F7.Average", "FT9.Average", "FC5.Average")], na.rm = TRUE)
left_anterior_Ungrammatical_S2_N600 <- mean(left_anterior_Ungrammatical_row_means_S2_N600, na.rm = TRUE)
right_anterior_Ungrammatical_row_means_S2_N600 <- rowMeans(S2_Ungrammatical_N600[, c("Fp2.Average", "F4.Average", "F8.Average", "FC6.Average", "FT10.Average")], na.rm = TRUE)
right_anterior_Ungrammatical_S2_N600 <- mean(right_anterior_Ungrammatical_row_means_S2_N600, na.rm = TRUE)
left_posterior_Ungrammatical_row_means_S2_N600 <- rowMeans(S2_Ungrammatical_N600 [, c("P7.Average", "P3.Average", "O1.Average")], na.rm = TRUE)
left_posterior_Ungrammatical_S2_N600 <- mean(left_posterior_Ungrammatical_row_means_S2_N600, na.rm = TRUE)
right_posterior_Ungrammatical_row_means_S2_N600 <- rowMeans(S2_Ungrammatical_N600 [,c ("P4.Average", "P8.Average", "O2.Average")], na.rm = TRUE)
right_posterior_Ungrammatical_S2_N600 <- mean(right_posterior_Ungrammatical_row_means_S2_N600, na.rm = TRUE)
midline_anterior_Ungrammatical_row_means_S2_N600 <- rowMeans(S2_Ungrammatical_N600 [, c ("Fz.Average", "FC1.Average", "FC2.Average")], na.rm = TRUE)
midline_anterior_Ungrammatical_S2_N600 <- mean(midline_anterior_Ungrammatical_row_means_S2_N600, na.rm = TRUE)
midline_medial_Ungrammatical_row_means_S2_N600 <- rowMeans(S2_Ungrammatical_N600 [,c ("Cz.Average", "CP1.Average", "CP2.Average")], na.rm = TRUE)
midline_medial_Ungrammatical_S2_N600 <- mean(midline_medial_Ungrammatical_row_means_S2_N600, na.rm = TRUE)
midline_posterior_Ungrammatical_row_means_S2_N600 <- rowMeans(S2_Ungrammatical_N600[,c ("Pz.Average", "Oz.Average")], na.rm = TRUE)
midline_posterior_Ungrammatical_S2_N600 <- mean(midline_posterior_Ungrammatical_row_means_S2_N600, na.rm = TRUE)
# Print results
print(left_medial_Ungrammatical_S2_N600)
print(left_medial_Grammatical_S2_N600)
print(right_medial_Ungrammatical_S2_N600)
print(right_medial_Grammatical_S2_N600)
print(left_anterior_Ungrammatical_S2_N600)
print(left_anterior_Grammatical_S2_N600)
print(right_anterior_Ungrammatical_S2_N600)
print(right_anterior_Grammatical_S2_N600)
print(left_posterior_Ungrammatical_S2_N600)
print(left_posterior_Grammatical_S2_N600)
print(right_posterior_Ungrammatical_S2_N600)
print(right_posterior_Grammatical_S2_N600)
print(midline_anterior_Ungrammatical_S2_N600)
print(midline_anterior_Grammatical_S2_N600)
print(midline_medial_Ungrammatical_S2_N600)
print(midline_medial_Grammatical_S2_N600)
print(midline_posterior_Ungrammatical_S2_N600)
print(midline_posterior_Grammatical_S2_N600)
<<<<<<< HEAD
TESTS
#produces a board to directly compare with no statistical analysis
Regions_N600 <- c('left_medial', 'right_medial', 'left_anterior', 'right_anterior', 'left_posterior', 'right_posterior', 'midline_anterior', 'midline_medial', 'midline_posterior')
Ungrammatical_condition <- c(left_medial_Ungrammatical_S2_N600, right_medial_Ungrammatical_S2_N600, left_anterior_Ungrammatical_S2_N600, right_anterior_Ungrammatical_S2_N600, left_posterior_Ungrammatical_S2_N600, right_posterior_Ungrammatical_S2_N600, midline_anterior_Ungrammatical_S2_N600, midline_medial_Ungrammatical_S2_N600, midline_posterior_Ungrammatical_S2_N600)
Grammatical_condition <- c(left_medial_Grammatical_S2_N600, right_medial_Grammatical_S2_N600, left_anterior_Grammatical_S2_N600, right_anterior_Grammatical_S2_N600, left_posterior_Grammatical_S2_N600, right_posterior_Grammatical_S2_N600, midline_anterior_Grammatical_S2_N600, midline_medial_Grammatical_S2_N600, midline_posterior_Grammatical_S2_N600)
df <- data.frame(Regions_N600, Ungrammatical_condition, Grammatical_condition)
View(df)
print(Regions_N600)
# same as above
#Creating a table with the average values of each region per grammatical condition
Regions <- c('left_medial', 'right_medial', 'left_anterior', 'right_anterior', 'left_posterior', 'right_posterior', 'midline_anterior', 'midline_medial', 'midline_posterior')
Grammatical <- c(left_medial_Grammatical_S2_N600, right_medial_Grammatical_S2_N600, left_anterior_Grammatical_S2_N600, right_anterior_Grammatical_S2_N600, left_posterior_Grammatical_S2_N600, right_posterior_Grammatical_S2_N600, midline_anterior_Grammatical_S2_N600, midline_medial_Grammatical_S2_N600, midline_posterior_Grammatical_S2_N600)
Ungrammatical <- c(left_medial_Ungrammatical_S2_N600, right_medial_Ungrammatical_S2_N600, left_anterior_Ungrammatical_S2_N600, right_anterior_Ungrammatical_S2_N600, left_posterior_Ungrammatical_S2_N600, right_posterior_Ungrammatical_S2_N600, midline_anterior_Ungrammatical_S2_N600, midline_medial_Ungrammatical_S2_N600, midline_posterior_Ungrammatical_S2_N600)
N600_regions_per_condition <- data.frame(
Regions = Regions,
Grammatical = Grammatical,
Ungrammatical = Ungrammatical
)
View(N600_regions_per_condition)
#ANOVAs for Session2 N600
# Sample data
AnovaforN600 <- data.frame(
ROIs = rep(c("A", "B", "C"), each = 10),
Grammaticality = c(rnorm(10, mean=5), rnorm(10, mean=6), rnorm(10, mean=7))
)
# Display the first few rows of the data
head(df)
# Direct ANOVA using wide format data
# Combine all data into one dataframe for simplicity
Grammatical <- c(left_medial_Grammatical_S2_N600, right_medial_Grammatical_S2_N600, left_anterior_Grammatical_S2_N600, right_anterior_Grammatical_S2_N600, left_posterior_Grammatical_S2_N600, right_posterior_Grammatical_S2_N600, midline_anterior_Grammatical_S2_N600, midline_medial_Grammatical_S2_N600, midline_posterior_Grammatical_S2_N600)
Ungrammatical <- c(left_medial_Ungrammatical_S2_N600, right_medial_Ungrammatical_S2_N600, left_anterior_Ungrammatical_S2_N600, right_anterior_Ungrammatical_S2_N600, left_posterior_Ungrammatical_S2_N600, right_posterior_Ungrammatical_S2_N600, midline_anterior_Ungrammatical_S2_N600, midline_medial_Ungrammatical_S2_N600, midline_posterior_Ungrammatical_S2_N600)
# Define the vectors
ROI <- rep(c("left_medial", "right_medial", "left_anterior", "right_anterior", "left_posterior", "right_posterior", "midline_anterior", "midline_medial", "midline_posterior"), 2)
Condition <- rep(c("Grammatical", "Ungrammatical"), each = 9)
Level_of_Activation <- c(left_medial_Grammatical_S2_N600, right_medial_Grammatical_S2_N600, left_anterior_Grammatical_S2_N600, right_anterior_Grammatical_S2_N600, left_posterior_Grammatical_S2_N600, right_posterior_Grammatical_S2_N600, midline_anterior_Grammatical_S2_N600, midline_medial_Grammatical_S2_N600, midline_posterior_Grammatical_S2_N600,
left_medial_Ungrammatical_S2_N600, right_medial_Ungrammatical_S2_N600, left_anterior_Ungrammatical_S2_N600, right_anterior_Ungrammatical_S2_N600, left_posterior_Ungrammatical_S2_N600, right_posterior_Ungrammatical_S2_N600, midline_anterior_Ungrammatical_S2_N600, midline_medial_Ungrammatical_S2_N600, midline_posterior_Ungrammatical_S2_N600)
# Combine them into a data frame
df_wide <- data.frame(ROI, Condition, Level_of_Activation)
# Perform a two-way ANOVA
anova_result_wide <- aov(Level_of_Activation ~ Condition + ROI + Condition:ROI, data = df_wide)
# Display the results
summary(anova_result_wide)
print(left_medial_Grammatical_S2_N600)
setwd("EEG/data/Session 3/Export")
getwd()
=======
############################
TESTS
#Session 3, N200
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP in two different properties and two different conditions in order to create two sets of data
#pattern1 (S1_S101) tests gender agreement in the Grammatical condition
#pattern2 (S1_S102) tests gender agreement in the Ungrammatical condition
#pattern3 (S2S101) tests differential object marking in the Grammatical condition
#pattern4 (S2S102) tests differential object marking in the Ungrammatical condition
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
pattern1_S3_N200 = "^[0-9].*N200_S1_S101.txt"
print(pattern1_S3_N200)
pattern2_S3_N200 = "^[0-9].*N200_S1_S102.txt"
pattern3_S3_N200 = "^[0-9].*N200_S2_S102.txt"
pattern4_S3_N200 = "^[0-9].*N200_S2_S102.txt"
#creation of two tables on the property of gender, one for the Grammatical and one for the Ungrammatical condition
file_listS101_S3_N200 <- list.files(pattern = pattern1_S3_N200)
print(file_listS101_S3_N200)
file_listS102_S3_N200 <- list.files(pattern = pattern2_S3_N200)
print(file_listS102_S3_N200)
#creation of two tables on the property of differential object marking, one for the Grammatical and one for the Ungrammatical condition
file_listS103_S3_N200 <- list.files(pattern = pattern3_S3_N200)
print(file_listS103_S3_N200)
file_listS104_S3_N200 <- list.files(pattern = pattern4_S3_N200)
print(file_listS104_S3_N200)
#reading the tables
data_listS101_S3_N200 <- lapply(file_listS101_S3_N200, function(file) {
read.table(file, header = TRUE, sep = "")
})
data_listS102_S3_N200 <- lapply(file_listS102_S3_N200, function(file) {
read.table(file, header = TRUE, sep = "")
})
data_listS103_S3_N200 <- lapply(file_listS103_S3_N200, function(file) {
read.table(file, header = TRUE, sep = "")
})
data_listS104_S3_N200 <- lapply(file_listS104_S3_N200, function(file) {
read.table(file, header = TRUE, sep = "")
})
<<<<<<< HEAD
str(data_listS101_S3_N200[[1]])
str(data_listS102_S3_N200[[1]])
str(data_listS103_S3_N200[[1]])
str(data_listS104_S3_N200[[1]])
if (all(sapply(data_listS101_S3_N200, nrow) > 0)) {
S3_S101_N200 <- Reduce(function(...) merge(..., all = TRUE), data_listS101_S3_N200)
View(S3_S101_N200)
} else {
print("Some data frames in data_listS101_S2_N200 have no rows.")
}
if (all(sapply(data_listS102_S3_N200, nrow) > 0)) {
S3_S102_N200 <- Reduce(function(...) merge(..., all = TRUE), data_listS102_S3_N200)
View(S3_S102_N200)
} else {
print("Some data frames in data_list2_S3_N200 have no rows.")
}
if (all(sapply(data_listS103_S3_N200, nrow) > 0)) {
S3_S103_N200 <- Reduce(function(...) merge(..., all = TRUE), data_listS103_S3_N200)
View(S3_S103_N200)
} else {
print("Some data frames in data_listS101_S2_N200 have no rows.")
}
if (all(sapply(data_listS104_S3_N200, nrow) > 0)) {
S3_S104_N200 <- Reduce(function(...) merge(..., all = TRUE), data_listS104_S3_N200)
View(S3_S104_N200)
} else {
print("Some data frames in data_listS101_S2_N200 have no rows.")
}
S3_GEN_Grammatical_N200 <- do.call(rbind, data_listS101_S3_N200)
str(S3_GEN_Grammatical_N200)
head(S3_GEN_Grammatical_N200)
S3_GEN_Ungrammatical_N200 <- do.call(rbind, data_listS102_S3_N200)
head(S3_GEN_Ungrammatical_N200)
S3_DOM_Grammatical_N200 <- do.call(rbind, data_listS103_S3_N200)
head(S3_DOM_Grammatical_N200)
S3_DOM_Ungrammatical_N200 <- do.call(rbind, data_listS104_S3_N200)
head(S3_DOM_Ungrammatical_N200)
#converting the tables into data frames
S3_GEN_Grammatical_N200 <- as.data.frame(S3_GEN_Grammatical_N200)
S3_GEN_Ungrammatical_N200 <- as.data.frame(S3_GEN_Ungrammatical_N200)
S3_DOM_Grammatical_N200 <- as.data.frame(S3_DOM_Grammatical_N200)
S3_DOM_Ungrammatical_N200 <- as.data.frame(S3_DOM_Ungrammatical_N200)
#testing dataframes
View(S3_GEN_Grammatical_N200)
View(S3_GEN_Ungrammatical_N200)
View(S3_DOM_Grammatical_N200)
View(S3_DOM_Grammatical_N200)
#the decimal point is a comma in BrainVision analyzer export files
#converting commas to periods in the dataframe
S3_GEN_Grammatical_N200 <- S3_GEN_Grammatical_N200 %>%
mutate(across(everything(), ~ gsub(",",".",., fixed = TRUE)))
S3_GEN_Ungrammatical_N200 <- S3_GEN_Ungrammatical_N200 %>%
mutate(across(everything(), ~ gsub(",",".",., fixed = TRUE)))
S3_DOM_Grammatical_N200 <- S3_DOM_Grammatical_N200 %>%
mutate(across(everything(), ~ gsub(",",".",., fixed = TRUE)))
S3_DOM_Ungrammatical_N200 <- S3_DOM_Ungrammatical_N200 %>%
mutate(across(everything(), ~ gsub(",",".",., fixed = TRUE)))
#Converting columns to numeric if necessary
S3_GEN_Grammatical_N200 <-S3_GEN_Grammatical_N200 %>% mutate(across(everything(), as.numeric))
S3_GEN_Ungrammatical_N200 <- S3_GEN_Ungrammatical_N200 %>% mutate(across(everything(), as.numeric))
S3_DOM_Grammatical_N200 <-S3_DOM_Grammatical_N200 %>% mutate(across(everything(), as.numeric))
S3_DOM_Ungrammatical_N200 <- S3_DOM_Ungrammatical_N200 %>% mutate(across(everything(), as.numeric))
left_medial_Grammatical_row_means_S3_GEN_N200 <- rowMeans(S3_GEN_Grammatical_N200[, c("T7.Average", "C3.Average", "CP5.Average")], na.rm = TRUE)
#Converting columns to numeric if necessary
S3_GEN_Grammatical_N200 <-S3_GEN_Grammatical_N200 %>% mutate(across(everything(), as.numeric))
S3_GEN_Ungrammatical_N200 <- S3_GEN_Ungrammatical_N200 %>% mutate(across(everything(), as.numeric))
S3_DOM_Grammatical_N200 <-S3_DOM_Grammatical_N200 %>% mutate(across(everything(), as.numeric))
S3_DOM_Ungrammatical_N200 <- S3_DOM_Ungrammatical_N200 %>% mutate(across(everything(), as.numeric))
left_medial_Grammatical_row_means_S3_GEN_N200 <- rowMeans(S3_GEN_Grammatical_N200[, c("T7.Average", "C3.Average", "CP5.Average")], na.rm = TRUE)
=======
#Checking dimensions of the data frames
str(data_listS101_S3_N200[[1]])
>>>>>>> cf69b3b11746a72c116535040138775f3836224b
