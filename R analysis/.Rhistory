library(lme4)
library(Ime4)
cd C:\Users\chath1626\OneDrive - UiT Office 365\LESS-Project-with-RAs-2
cd \Users\chath1626\OneDrive - UiT Office 365\LESS-Project-with-RAs-2
setwd("cd C:\Users\chath1626\OneDrive - UiT Office 365\LESS-Project-with-RAs-2
setwd("C:\Users\chath1626\OneDrive - UiT Office 365\LESS-Project-with-RAs-2")
setwd("C:/Users/chath1626/OneDrive - UiT Office 365/LESS-Project-with-RAs-2")
getwd("C:/Users/chath1626/OneDrive - UiT Office 365/LESS-Project-with-RAs-2")
getwd()
getwd()
file_list <- list.files(pattern = "*.txt")
setwd("C:/Users/chath1626/OneDrive - UiT Office 365/LESS-Project-with-RAs-2/Session 2")
getwd()
file_list <- list.files(pattern = "*.txt")
setwd("C:/Users/chath1626/OneDrive - UiT Office 365/LESS-Project-with-RAs-2/Session 2/Export")
getwd()
file_list <- list.files(pattern = "*.txt")
data_list <- lapply(file_list, function(file) {
read.table(file, header = TRUE, sep = "\t")
})
print(data_list[[1]])
library(lme4)
library(lme4)
install.packages(lme4)
"lme4"
install.packages("lme4")
getwd()
setwd("C:/Users/chath1626/OneDrive - UiT Office 365/LESS-Project-with-RAs-2/Session 2/Export")
getwd()
file_list <- list.files(pattern = "*.txt")
data_list <- lapply(file_list, function(file) {
read.table(file, header = FALSE, sep = "\t")
})
print(data_list[[1]])
View(data_list[[1]])
data_list <- lapply(file_list, function(file) {
read.table(file, header = FALSE, sep = "")
})
View(data_list[[1]])
data_list <- lapply(file_list, function(file) {
read.table(file, header = TRUE, sep = "")
})
View(data_list[[1]])
#analysing per Session, per condition, Segmentation S101, Segmentation S102 while maintaining the ERP
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP
pattern1 = regex("\d_N200_S101.txt")
#analysing per Session, per condition, Segmentation S101, Segmentation S102 while maintaining the ERP
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP
pattern1 = regex("/d_N200_S101.txt")
install.packages(stringr)
install.packages("stringr")
file_list <- list.files(pattern1)
#analysing per Session, per condition of grammaticality (Segmentation S101 = grammatical, Segmentation S102 = violation of grammaticality) while maintaining the ERP
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP
pattern1 = regex("/d_N200_S101.txt")
#analysing per Session, per condition of grammaticality (Segmentation S101 = grammatical, Segmentation S102 = violation of grammaticality) while maintaining the ERP
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP
pattern1 = regex("/d_N200_S101.txt")
#analysing per Session, per condition of grammaticality (Segmentation S101 = grammatical, Segmentation S102 = violation of grammaticality) while maintaining the ERP
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP
pattern1 = grep("/d_N200_S101.txt")
#analysing per Session, per condition of grammaticality (Segmentation S101 = grammatical, Segmentation S102 = violation of grammaticality) while maintaining the ERP
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP
pattern1 = grepl("/d_N200_S101.txt")
#analysing per Session, per condition of grammaticality (Segmentation S101 = grammatical, Segmentation S102 = violation of grammaticality) while maintaining the ERP
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP
pattern1 = "/d_N200_S101.txt"
#analysing per Session, per condition of grammaticality (Segmentation S101 = grammatical, Segmentation S102 = violation of grammaticality) while maintaining the ERP
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP
pattern1 = "/d_N200_S101.txt"
file_list <- list.files(pattern = pattern1)
data_list <- lapply(file_list, function(file) {
read.table(file, header = TRUE, sep = "")
})
View(data_list[[1]])
View(data_list[[1]])
print(file_list)
data_list <- lapply(file_list, function(file) {
read.table(file, header = TRUE, sep = "")
})
#analysing per Session, per condition of grammaticality (Segmentation S101 = grammatical, Segmentation S102 = violation of grammaticality) while maintaining the ERP
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP
pattern1 = "^[0-9]N200_S101.txt"
print(pattern1)
file_list <- list.files(pattern = pattern1)
print(file_list)
#analysing per Session, per condition of grammaticality (Segmentation S101 = grammatical, Segmentation S102 = violation of grammaticality) while maintaining the ERP
#creation of regex pattern in order for the programme to look for the pattern of participantNumber_ERP
pattern1 = "^[0-9].*N200_S101.txt"
file_list <- list.files(pattern = pattern1)
print(file_list)
print(file_list2)
print(file_list2)
file_list2 <- list.files(pattern2)
pattern2 = "^[0-9].*N200_S102.txt"
file_list2 <- list.files(pattern2)
print(file_list2)
file_list2 <- list.files(pattern = pattern2)
print(file_list2)
data_list1 <- lapply(file_list1, function(file) {
read.table(file, header = TRUE, sep = "")
})
file_list1 <- list.files(pattern = pattern1)
data_list1 <- lapply(file_list1, function(file) {
read.table(file, header = TRUE, sep = "")
})
View(data_list[[1]])
print(data_list1[[1]])
View(data_list1[[1]])
data_list2 <- lapply(file_list2, function(file) {
read.table(file, header = TRUE, sep = "")
})
View(data_list2[[1]])
View(data_list2[[1]])
View(data_list2[[1]])
#plotting the difference in N200 in the grammatical and nongrammatical conditions
merged.data.frame = Reduce(function(...) merge(..., all=T), data_list1)
View(merged.data.frame)
#plotting the difference in N200 in the grammatical and nongrammatical conditions
#combining all participant files
S101_N200 = Reduce(function(...) merge(..., all=T), data_list1)
View(S101_N200)
S102_N200 = Reduce(function(...) merge(..., all=T), datalist2)
S102_N200 = Reduce(function(...) merge(..., all=T), data_list2)
View(data_list2)
View(S102_N200)
library(ggplot)
library("ggplot")
install.packages("ggplot2")
View(S102_N200)
#plotting the two conditions
ggplot((S101_N200), aes (x = File, y = Fp1.Average)) +
geom_point(color ='blue')
library(ggplot2)
#plotting the two conditions
ggplot((S101_N200), aes (x = File, y = Fp1.Average)) +
geom_point(color ='blue')
#plotting the two conditions
gplot((S101_N200), aes (y = File, x = Fp1.Average)) +
geom_point(color ='blue')
#plotting the two conditions
ggplot((S101_N200), aes (y = File, x = Fp1.Average)) +
geom_point(color ='blue')
x
#plotting the two conditions
gplot((S101_N200), aes (x = File, y = Fp1.Average)) +
geom_point(color ='blue')
#plotting the two conditions
ggplot((S101_N200), aes (x = File, y = Fp1.Average)) +
geom_point(color ='blue')
